# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build, test, and upload prebuilds

on:
  push:
  pull_request:

jobs:
  build-x64:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-22.04-aarch64, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Cache vcpkg
        uses: actions/cache@v3
        env:
          # https://github.com/actions/runner-images/blob/main/images/win/Windows2022-Readme.md#environment-variables
          VCPKG_INSTALLATION_ROOT: C:\vcpkg
          cache-name: cache-vcpkg
        with:
          path: ${{ env.VCPKG_INSTALLATION_ROOT }}
          key: ${{ runner.os }}-${{ env.cache-name }}
        if: ${{ matrix.os == 'windows-latest' }}
      - name: Install linux deps
        run: sudo apt update && sudo apt install -y git cmake build-essential libcurl4-openssl-dev libssl-dev
        if: ${{ startsWith(matrix.os, 'ubuntu') }}

      - name: Install windows deps
        run: vcpkg install curl openssl --triplet=x64-windows-static
        if: ${{ matrix.os == 'windows-latest' }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: npm i
      - run: npm test
      - run: npm run prebuild
        if: ${{ matrix.os != 'ubuntu-22.04-aarch64' }}
      - run: npm run prebuild-arm64
        if: ${{ matrix.os == 'ubuntu-22.04-aarch64' }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: ./prebuilds
